{"version":3,"sources":["context/UserContext.js","components/Nav.js","components/Post.js","pages/Home.js","pages/Create.js","context/LikesContext.js","pages/SinglePost.js","pages/Login.js","pages/Logout.js","pages/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","children","useState","user","setUser","Provider","value","useContext","className","to","exact","likes","description","url","src","formatImageUrl","Home","posts","setPosts","useEffect","a","fetch","response","json","data","getPosts","map","post","id","Post","image","setDescription","file","setFile","error","setError","console","log","handleSubmit","event","preventDefault","formData","FormData","append","JSON","stringify","method","headers","jwt","body","onSubmit","placeholder","onChange","target","type","files","LikesContext","likesGiven","setLikesGiven","likesReceived","setLikesReceived","reloader","loadLikesGiven","loadLikesReceived","SinglePost","match","history","setPost","loading","setLoading","edit","setEdit","params","isPostAlreadyLiked","find","like","fetchPost","handleDelete","push","handleEditSubmit","e","handleLike","parseInt","handleRemoveLike","onClick","author","Login","email","setEmail","password","setPassword","store","set","identifier","message","messages","username","App","Container","fluid","Row","md","Nav","path","component","Create","Signup","Logout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c376ef0f.chunk.js","sourcesContent":["import { createContext, useState } from 'react'\r\n\r\nexport const UserContext = createContext(null)\r\n\r\n// component to setup context\r\n// any component included in this component will be re-rendered\r\nexport default ({ children }) => {\r\n    const [user, setUser] = useState(null) // { 'Jim': 'ole' }\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, setUser }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\n// στο strapi-crash εχω κάνει πιο απλό implenentation!\r\n","import { Menu } from 'antd'\r\nimport React, { useContext, useState, useEffect } from 'react'\r\n// import store from 'store'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport { UserContext } from '../context/UserContext'\r\n\r\n// if (localStorage.getItem('cart')) {\r\n//     cart = JSON.parse(localStorage.getItem('cart'))\r\n// }\r\n// cart.map((product, i) => {\r\n//     if (product._id == p._id) {\r\n//         cart[i].count = count;\r\n//     }\r\n// })\r\n// localStorage.setItem('cart', JSON.stringify(cart))\r\n// dispatch({\r\n//     type: \"ADD_TO_CART\",\r\n//     payload: cart,\r\n// });\r\n\r\n\r\nexport default () => {\r\n    const { user } = useContext(UserContext)\r\n    // const [user, setuser] = useState('')\r\n    // let user = store.get('user')\r\n    // console.log('user from store:', user)\r\n    // console.log('from localstorage', user.email)\r\n\r\n\r\n    // let user\r\n    // useEffect(() => {\r\n    //     if (localStorage.getItem('user')) {\r\n    //         user = JSON.parse(localStorage.getItem('user'))\r\n    //     }\r\n    // }, [])\r\n\r\n    return (\r\n        <div className=\"Nav\">\r\n            <NavLink to='/' exact> Home </NavLink>\r\n            {user &&\r\n                <>\r\n                    <NavLink to='/create' exact className=\"alink\"> Create </NavLink>\r\n                    <NavLink to='/logout' exact> Logout </NavLink>\r\n                </>\r\n            }\r\n            {!user &&\r\n                <>\r\n                    <NavLink to='/login' exact> Login </NavLink>\r\n                    <NavLink to='/signup' exact> Signup </NavLink>\r\n                </>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","export default ({ likes, description, url }) => {\r\n    // console.log(likes, description, url);\\\r\n\r\n    const API_URL = 'https://strapi-crud.herokuapp.com'\r\n    const formatImageUrl = (url) => `${API_URL}${url}`\r\n\r\n    return (\r\n        <div className=\"Post\">\r\n            <img className=\"Post_Image\" src={formatImageUrl(url)} />\r\n            <h4>{description}</h4>\r\n            <div>\r\n                <span>Likes: {likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Post from '../components/Post'\r\n\r\nconst Home = () => {\r\n    const [posts, setPosts] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getPosts = async () => {\r\n            const response = await fetch('https://strapi-crud.herokuapp.com/posts')\r\n            const data = await response.json()\r\n            setPosts(data)\r\n        }\r\n\r\n        getPosts()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            {posts.map((post) => (\r\n                <Link to={`/${post.id}`}>\r\n                    <Post\r\n                        likes={post.likes}\r\n                        description={post.description}\r\n                        url={post.image && post.image.url}\r\n                    />\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n","import React, { useState, useContext } from 'react'\r\nimport { UserContext } from '../context/UserContext'\r\n\r\nexport default () => {\r\n\r\n    const [description, setDescription] = useState('')\r\n    const [file, setFile] = useState(null)\r\n    const [error, setError] = useState('')\r\n\r\n    console.log(\"file\", file)\r\n\r\n    const { user } = useContext(UserContext)\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n\r\n        if (!user) {\r\n            setError('Please log in first')\r\n\r\n            return\r\n        }\r\n\r\n        if (!description) {\r\n            setError('Please add a description')\r\n            return\r\n        }\r\n\r\n        if (!file) {\r\n            setError('Please add a file')\r\n            return\r\n        }\r\n\r\n        // formData is a way to create multi-part data to send\r\n        const formData = new FormData()\r\n        formData.append('data', JSON.stringify({ description }))\r\n        formData.append('files.image', file)\r\n\r\n        // without formData\r\n        // const response = await fetch('https://strapi-crud.herokuapp.com/posts', {\r\n        //     method: 'POST',\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json'\r\n        //     },\r\n        //     body: JSON.stringify({\r\n        //         description\r\n        //     })\r\n        // })\r\n\r\n        try {\r\n            // with formData\r\n            const response = await fetch('https://strapi-crud.herokuapp.com/posts', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${user.jwt}`\r\n                },\r\n                body: formData\r\n            })\r\n\r\n            const data = await response.json()\r\n\r\n            console.log(\"data\", data)\r\n        } catch (err) {\r\n            console.log(\"Exception \", err)\r\n            setError(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Create\">\r\n            <h2>Create</h2>\r\n\r\n            {error && <p>{error}</p>}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    placeholder=\"Description\"\r\n                    value={description}\r\n                    onChange={(event) => {\r\n                        setError('')\r\n                        setDescription(event.target.value)\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"file\"\r\n                    placeholder=\"Add a File\"\r\n                    onChange={(event) => {\r\n                        setError('')\r\n                        setFile(event.target.files[0])\r\n                    }}\r\n                />\r\n                <button>Submit</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n\r\n}","import React, { createContext, useState, useEffect, useContext } from 'react'\r\nimport { UserContext } from './UserContext'\r\n\r\nexport const LikesContext = createContext(null)\r\n\r\nexport default ({ children }) => {\r\n\r\n    const { user } = useContext(UserContext)\r\n\r\n    const [likesGiven, setLikesGiven] = useState([])\r\n    const [likesReceived, setLikesReceived] = useState([])\r\n\r\n    const reloader = () => {\r\n        if (user) {\r\n            const loadLikesGiven = async () => {\r\n                const response = await fetch(`https://strapi-crud.herokuapp.com/likes/given?user=${user.user.id}`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${user.jwt}`\r\n                    }\r\n                })\r\n                const data = await response.json()\r\n                setLikesGiven(data)\r\n            }\r\n            // useEffect does not allow any side-effect, so\r\n            // we cannot return a promise that we want to await: so, \r\n            // in order to use await we first have to define a function\r\n            // and then call it\r\n            loadLikesGiven()\r\n\r\n            const loadLikesReceived = async () => {\r\n                const response = await fetch(`https://strapi-crud.herokuapp.com/likes/received?post.author=${user.user.id}`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${user.jwt}`\r\n                    }\r\n                })\r\n                const data = await response.json()\r\n                setLikesReceived(data)\r\n            }\r\n            loadLikesReceived()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        reloader()\r\n    }, [user])\r\n\r\n    console.log(\"likesGiven\", likesGiven)\r\n    console.log(\"likesReceived\", likesReceived)\r\n\r\n    return (\r\n        <LikesContext.Provider value={{ likesGiven, likesReceived, reloader }}>\r\n            {children}\r\n        </LikesContext.Provider>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\nimport Post from '../components/Post'\r\nimport { UserContext } from '../context/UserContext'\r\nimport { LikesContext } from '../context/LikesContext'\r\n\r\nconst SinglePost = ({ match, history }) => {\r\n    const [post, setPost] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    const [edit, setEdit] = useState(false)\r\n    const [description, setDescription] = useState('')\r\n    const { user, setUser } = useContext(UserContext)\r\n    const { likesGiven, reloader } = useContext(LikesContext)\r\n\r\n    const { id } = match.params\r\n\r\n    // this variable tells us if we like this post or not\r\n    const isPostAlreadyLiked = (() => {\r\n        return likesGiven && likesGiven.find(like => like.post && like.post.id == id)\r\n    })()\r\n\r\n\r\n    console.log('user', user);\r\n    console.log('isPostAlreadyLiked:', isPostAlreadyLiked)\r\n    // console.log('setUser', setUser);\r\n\r\n    const fetchPost = async () => {\r\n        try {\r\n            const response = await fetch(`https://strapi-crud.herokuapp.com/posts/${id}`)\r\n            const data = await response.json()\r\n\r\n            console.log(\"data\", data)\r\n            setPost(data)\r\n            setDescription(data.description)\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setLoading(false)\r\n            setError(\"404 - not found\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPost()\r\n    }, [])\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            const response = await fetch(`https://strapi-crud.herokuapp.com/posts/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Authorization': `Bearer ${user.jwt}`\r\n                }\r\n            })\r\n            const data = await response.json()\r\n            history.push('/')\r\n\r\n        } catch (error) {\r\n            console.log('error in delete:', error)\r\n        }\r\n    }\r\n\r\n    const handleEditSubmit = async (e) => {\r\n        e.preventDefault()\r\n        console.log('in handleEditSubmit');\r\n        try {\r\n            const response = await fetch(`https://strapi-crud.herokuapp.com/posts/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${user.jwt}`\r\n                },\r\n                body: JSON.stringify({\r\n                    description\r\n                })\r\n            })\r\n            const data = await response.json()\r\n            fetchPost()\r\n            console.log(\"handleEditSubmit data\", data);\r\n        } catch (error) {\r\n            console.log('error:', error);\r\n        }\r\n    }\r\n\r\n    const handleLike = async () => {\r\n        try {\r\n            const response = await fetch('https://strapi-crud.herokuapp.com/likes', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Bearer ${user.jwt}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    post: parseInt(id)\r\n                })\r\n            })\r\n            fetchPost()\r\n            reloader()\r\n        } catch (err) {\r\n            console.log(\"Exception \", err)\r\n        }\r\n    }\r\n\r\n    const handleRemoveLike = async () => {\r\n        try {\r\n            const response = await fetch(`https://strapi-crud.herokuapp.com/likes/${id}`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Authorization': `Bearer ${user.jwt}`\r\n                }\r\n            })\r\n            fetchPost()\r\n            reloader()\r\n        } catch (err) {\r\n            console.log(\"Exception \", err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='Post piokatw'>\r\n            {loading && <p>Loading...</p>}\r\n            {!loading &&\r\n                <>\r\n                    {/* only display it after you fetch it */}\r\n                    {post.id &&\r\n                        <>\r\n                            <Post\r\n                                likes={post.likes}\r\n                                description={post.description}\r\n                                url={post.image && post.image.url}\r\n                            />\r\n\r\n                            {user &&\r\n                                <>\r\n                                    {isPostAlreadyLiked &&\r\n                                        <button onClick={handleRemoveLike}>Remove Like</button>\r\n                                    }\r\n\r\n                                    {!isPostAlreadyLiked &&\r\n                                        <button onClick={handleLike}>Like</button>\r\n                                    }\r\n                                </>\r\n                            }\r\n                            {user && user.user && post && post.author && post.author.id === user.user.id &&\r\n                                <>\r\n                                    <button onClick={handleDelete}>Delete this post</button>\r\n                                    <button onClick={() => setEdit(true)}>Edit this post</button>\r\n                                    {edit &&\r\n                                        <form onSubmit={handleEditSubmit}>\r\n                                            <input\r\n                                                value={description}\r\n                                                onChange={(e) => setDescription(e.target.value)}\r\n                                                placeholder='New Description'\r\n                                            />\r\n                                            <button>Confirm</button>\r\n                                        </form>\r\n                                    }\r\n                                </>\r\n                            }\r\n                        </>\r\n                    }\r\n                    {/* {!post.id && <p>404 - not found</p>} */}\r\n                </>\r\n            }\r\n            {error && <p>{error}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\n// Mits version\r\nexport default SinglePost\r\n","import React, { useState, useContext, useEffect } from 'react'\r\n// import { Row } from 'react-bootstrap'\r\nimport { UserContext } from '../context/UserContext'\r\nimport store from 'store'\r\n// import axios from 'axios'\r\n\r\nconst Login = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    const { user, setUser } = useContext(UserContext)\r\n    // console.log(\"user\", user)\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            // localStorage.setItem('user', JSON.stringify(user))\r\n            store.set('user', { user: user.user.email })\r\n            history.push('/')\r\n        }\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n\r\n        try {\r\n            const response = await fetch('https://strapi-crud.herokuapp.com/auth/local/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    identifier: email,\r\n                    password\r\n                })\r\n            })\r\n\r\n            // if (localStorage.getItem(\"cart\")) {\r\n            //     cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n            // }\r\n\r\n            // με axios αποφεύγουμε τα arrays:data.message[0].messages[0], αλλά με το fetch\r\n            // μπορούμε και τσιμπάμε το error message του strapi\r\n            //     axios \r\n            //         .post('https://strapi-crud.herokuapp.com/auth/local', {\r\n            //             identifier: email,\r\n            //             password,\r\n            //         })\r\n            //         .then(response => {\r\n            //             // Handle success.\r\n            //             console.log('User profile', response.data.user);\r\n            //             console.log('User token', response.data.jwt);\r\n            //         })\r\n            //         .catch(error => {\r\n            //             // Handle error.\r\n            //             setError('Something went wrong ' + error)\r\n            //         });\r\n            // }\r\n\r\n            const data = await response.json()\r\n            console.log(\"login user\", data)\r\n\r\n            if (data.message) {\r\n                setError(data.message[0].messages[0].message)\r\n\r\n                return //Stop execution\r\n            }\r\n\r\n            setUser(data)\r\n\r\n        } catch (err) {\r\n            setError('Something went wrong ' + err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"piokatw\">\r\n            <h2>Login</h2>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                        setError('')\r\n                        setEmail(e.target.value)\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => {\r\n                        setError('')\r\n                        setPassword(e.target.value)\r\n                    }}\r\n                />\r\n                <button>Login</button>\r\n            </form>\r\n\r\n            {error && <p>{error}</p>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Login\r\n","// import React, { useState, useContext, useEffect } from 'react'\r\n// import { UserContext } from '../context/UserContext'\r\n// import store from 'store'\r\n\r\nexport default ({ history }) => {\r\n    // const { user } = useContext(UserContext)\r\n\r\n    // store.remove('user')\r\n    history.push('/')\r\n\r\n    return (\r\n        <h2>Logout...</h2>\r\n    )\r\n}","import React, { useState, useContext, useEffect } from 'react'\r\nimport { UserContext } from '../context/UserContext'\r\n// import axios from 'axios'\r\n\r\nconst Login = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    const { user, setUser } = useContext(UserContext)\r\n    // console.log(\"user\", user)\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push('/')\r\n        }\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            const response = await fetch('https://strapi-crud.herokuapp.com/auth/local/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: email,\r\n                    email,\r\n                    password\r\n                })\r\n            })\r\n\r\n            const data = await response.json()\r\n            console.log(\"data\", data)\r\n\r\n            if (data.message) {\r\n                setError(data.message[0].messages[0].message)\r\n\r\n                return //Stop execution\r\n            }\r\n\r\n            setUser(data)\r\n\r\n        } catch (err) {\r\n            setError('Something went wrong ' + err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"piokatw\">\r\n            <h2>Signup</h2>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                        setError('')\r\n                        setEmail(e.target.value)\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => {\r\n                        setError('')\r\n                        setPassword(e.target.value)\r\n                    }}\r\n                />\r\n                <button>Signup</button>\r\n            </form>\r\n\r\n            {error && <p>{error}</p>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Login\r\n","import { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Container, Row } from 'react-bootstrap'\nimport Nav from './components/Nav'\nimport Home from './pages/Home'\nimport Create from './pages/Create'\nimport SinglePost from './pages/SinglePost'\nimport Login from './pages/Login'\nimport Logout from './pages/Logout'\nimport Signup from './pages/Signup'\nimport './App.css'\n\nfunction App() {\n\n  return (\n    // <div className=\"App\">\n    <Container fluid>\n      <BrowserRouter>\n        <Row md={10} className=\"rows\">\n          <Nav />\n        </Row>\n        <Row md={12}>\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/create' exact component={Create} />\n            <Route path='/login' exact component={Login} />\n            <Route path='/signup' exact component={Signup} />\n            <Route path='/logout' exact component={Logout} />\n            <Route path='/:id' exact component={SinglePost} />\n          </Switch>\n        </Row>\n      </BrowserRouter>\n    </Container>\n    // </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport UserContextProvider from './context/UserContext'\nimport LikesContextProvider from './context/LikesContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserContextProvider>\n      <LikesContextProvider>  {/* Likes needs User^ */}\n        <App />\n      </LikesContextProvider>\n    </UserContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}